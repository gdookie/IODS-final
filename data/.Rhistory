glimpse(human)
# Next we'll save the wrangled and modified data as a .csv file
write.csv(human, "/Users/gyandookie/IODS-project/data/human.csv", row.names = TRUE)
# Author: Gyan Dookie
# Date: 24.02.2017
# Description: IODS Chapter 5 wrangling exercise. Here I'm combining the human development and
# gender inequlity datasets and thus creating the human dataset which is then further wrangled and
# finally saved as the human.csv file for further use.
# Read the “Human development” and “Gender inequality” datas into R
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
# library(stringr)
library(stringr)
# load dplyr
library(dplyr)
# library(plyr) I chose another why to change the variable names, so I don't need the plyr package
# Explore the datasets
# Human development - structure and dimensions
str(hd)
dim(hd)
# Gender inequality - structure and dimensions
str(gii)
dim(gii)
# Create summaries of variables
# Summary of Human development data
summary(hd)
summary(gii)
#Look at the meta files and rename the variables with (shorter) descriptive names. (1 point)
# Current names of variables - Human development
names(hd)
str(hd)
# Change  Human Development dataframe variable names to the following: HumDevRank, Country, HumDevIndex, LifeExpBirth, EduExpYrs, EduMeanYrs, GNI, GNIMinusHDI
names(hd) <- c("HumDevRank", "Country", "HumDevIndex", "LifeExpBirth", "EduExpYrs", "EduMeanYrs", "GNI", "GNIMinusHDI")
# Double checking that the names were changed
names(hd)
str(hd)
# Current names of variables - Gender inequality
names(gii)
# Change the Gender Inequality dataframe variable names to the following: GendIneqRank, Country, GendIneqIndex, MatMortRat, AdolBirthRate, ParlPercRepres, EduSecondFemale, EduSecondMale, LabParticipFemale, LabParticipMale
names(gii) <- c("GendIneqRank", "Country", "GendIneqIndex", "MatMortRat", "AdolBirthRate", "ParlPercRepres", "EduSecondFemale", "EduSecondMale", "LabParticipFemale", "LabParticipMale")
# Double checking that the names were changed
names(gii)
str(gii)
#Mutate the “Gender inequality” data and create two new variables. The first one should be the ratio of Female and Male populations with secondary education in each country. (i.e. edu2F / edu2M). The second new variable should be the ratio of labour force participation of females and males in each country (i.e. labF / labM). (1 point)
gii <- mutate(gii, EduF2M = EduSecondFemale/EduSecondMale, LabF2M = LabParticipFemale/LabParticipMale)
names(gii)
#join together the two datasets using the variable Country as the identifier. Keep only the countries in both data sets (Hint: inner join). Call the new joined data human and save it in your data folder. (1 point)
# Here we join the two datasets by the selected identifier
#human <- inner_join(hd, gii, by = "Country", suffix=c(".hd", ".gii")) Let's not include the suffix argument, because it wasn't asked for in this exercise
human <- inner_join(hd, gii, by = "Country")
# Let's take a look at the new joined dataset to be sure everything is ok
dim(human)
glimpse(human)
names(human)
str(human)
# Mutate the data: transform the Gross National Income (GNI) variable to numeric (Using string manipulation. Note that the mutation of 'human' was not done on DataCamp).
# Here the comma character is removed from the GNI variable's values and then it's datatype is changed to numeric
human$GNI<- str_replace(human$GNI, pattern=",", replace ="") %>% as.numeric()
str(human$GNI)
str(human)
# Now we can exclude unneeded variables and keep only the columns matching the following variable names: "Country", "Edu2.FM", "Labo.FM", "Edu.Exp", "Life.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F"
human <- dplyr::select(human, Country, EduSecondFemale, LabParticipFemale, EduExpYrs, LifeExpBirth, GNI,MatMortRat, AdolBirthRate, ParlPercRepres)
# Here I change the variable names I created earlier to shorter names (because I found out that long variable names are tedious to write and prone to typos later in the analysis exercise)
names(human) <- c("Country", "Edu2.FM", "Labo.FM", "Edu.Exp", "Life.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F")
str(human)
complete.cases(human)
#Remove all rows with missing values
data.frame(human[-1], comp = complete.cases(human))
human <- filter(human, complete.cases(human) != FALSE)
#Remove the observations which relate to regions instead of countries.
last <- nrow(human) - 7
last
human <- human[1:last,]
dim(human)
# Define the row names of the data by the country names and remove the country name column from the data. The data should now have 155 observations and 8 variables (corrected 21.2.) . Save the human data in your data folder including the row names. You can overwrite your old ‘human’ data. (1 point)
rownames(human) <- human$Country
human
# remove the Country variable
# human <- select(human, EduSecondFemale, LabParticipFemale, EduExpYrs, LifeExpBirth, GNI, MatMortRat, AdolBirthRate, ParlPercRepres)
human <- select(human, -Country)
dim(human)
names(human)
str(human$GNI)
glimpse(human)
# Next we'll save the wrangled and modified data as a .csv file
write.csv(human, "/Users/gyandookie/IODS-project/data/human.csv", row.names = TRUE)
ref_num <- read_csv("unhcr_asylum_seekers.csv",skip=2, col_names=TRUE)
names(ref_num)
dim(ref_num)
str(ref_num)
glimpse(ref_num)
names(ref_num)= c("Year", "CtryAsylum", "Orig", "RSD","TotalStY","AppDY","DecRec", "DecOth", "Rejected", "OthClos", "TotDec", "TotEndY" )
ref_num$Rejected = as.numeric(ref_num$Rejected)
glimpse(ref_num)
#data.frame(ref_num[-1], comp = complete.cases(ref_num))
#ref_num <- filter(ref_num, complete.cases(ref_num) != FALSE)
GER <- filter(ref_num, CtryAsylum =="Germany") %>% group_by(Orig) %>% summarise(sum(Rejected))
GER
ref_num <- filter(ref_num, CtryAsylum %in% c("Germany", "Finland") | Orig %in% c("Afganistan"))
group_by(ref_num, CtryAsylum) %>% summarise(sum(Rejected))
#install.packages("readr")
library(dplyr)
library(readr)
#install.packages("readxl")
library(readxl)
setwd("/Users/gyandookie/IODS-final/data")
ref_num <- read_csv("unhcr_asylum_seekers.csv",skip=2, col_names=TRUE)
names(ref_num)
dim(ref_num)
str(ref_num)
glimpse(ref_num)
names(ref_num)= c("Year", "CtryAsylum", "Orig", "RSD","TotalStY","AppDY","DecRec", "DecOth", "Rejected", "OthClos", "TotDec", "TotEndY" )
ref_num$Rejected = as.numeric(ref_num$Rejected)
glimpse(ref_num)
#data.frame(ref_num[-1], comp = complete.cases(ref_num))
#ref_num <- filter(ref_num, complete.cases(ref_num) != FALSE)
GER <- filter(ref_num, CtryAsylum =="Germany") %>% group_by(Orig) %>% summarise(sum(Rejected))
GER
ref_num <- filter(ref_num, CtryAsylum %in% c("Germany", "Finland") | Orig %in% c("Afganistan"))
group_by(ref_num, CtryAsylum) %>% summarise(sum(Rejected))
GER <- filter(ref_num, CtryAsylum =="Germany") %>% group_by(Orig) %>% summarise(sum(Rejected))
GER
ref_num <- filter(ref_num, CtryAsylum %in% c("Germany", "Finland") & Orig %in% c("Afganistan"))
group_by(ref_num, CtryAsylum) %>% summarise(sum(Rejected))
ref_num <- filter(ref_num, CtryAsylum %in% c("Germany", "Finland") & Orig %in% c("Afganistan"))
ref_num <- filter(ref_num, CtryAsylum %in% c("Germany") & Orig %in% c("Afganistan"))
group_by(ref_num, CtryAsylum) %>% summarise(sum(Rejected))
ref_num <- read_csv("unhcr_asylum_seekers.csv",skip=2, col_names=TRUE)
names(ref_num)
dim(ref_num)
str(ref_num)
glimpse(ref_num)
names(ref_num)= c("Year", "CtryAsylum", "Orig", "RSD","TotalStY","AppDY","DecRec", "DecOth", "Rejected", "OthClos", "TotDec", "TotEndY" )
ref_num$Rejected = as.numeric(ref_num$Rejected)
glimpse(ref_num)
#data.frame(ref_num[-1], comp = complete.cases(ref_num))
#ref_num <- filter(ref_num, complete.cases(ref_num) != FALSE)
#GER <- filter(ref_num, CtryAsylum =="Germany") %>% group_by(Orig) %>% summarise(sum(Rejected))
#GER
ref_num <- filter(ref_num, CtryAsylum %in% c("Germany") & Orig %in% c("Afganistan"))
group_by(ref_num, CtryAsylum) %>% summarise(sum(Rejected))
ref_num <- filter(ref_num, CtryAsylum %in% c("Germany") & Orig %in% c("Afganistan"))
ref_num <- group_by(ref_num, CtryAsylum) %>% summarise(sum(Rejected))
ref_num
ref_num_2 <- select(ref_num, one_of("Year", "CtryAsylum", "Orig", "TotalStY", "DecRec","DecOth", "Rejected", "TotDec"))
names(ref_num_2)
head(ref_num_2)
ref_num_2gr <- group_by(ref_num_2, CtryAsylum)
summarise(ref_num_2gr, max("Rejected"))
ref_num <- group_by(ref_num, CtryAsylum) %>% summarise(sum(Rejected))
GER <- filter(ref_num, CtryAsylum =="Germany") %>% group_by(Orig) %>% summarise(sum(Rejected))
ref_num <- read_csv("unhcr_asylum_seekers.csv",skip=2, col_names=TRUE)
names(ref_num)
dim(ref_num)
str(ref_num)
glimpse(ref_num)
names(ref_num)= c("Year", "CtryAsylum", "Orig", "RSD","TotalStY","AppDY","DecRec", "DecOth", "Rejected", "OthClos", "TotDec", "TotEndY" )
ref_num$Rejected = as.numeric(ref_num$Rejected)
glimpse(ref_num)
#data.frame(ref_num[-1], comp = complete.cases(ref_num))
#ref_num <- filter(ref_num, complete.cases(ref_num) != FALSE)
GER <- filter(ref_num, CtryAsylum =="Germany") %>% group_by(Orig) %>% summarise(sum(Rejected))
GER
filter(ref_num, CtryAsylum %in% c("Germany")) %>% group_by(Orig) %>% summarise(sum(Rejected))
filter(ref_num, CtryAsylum %in% c("Germany", "Finland")) %>% group_by(Orig) %>% summarise(sum(Rejected))
filter(ref_num, CtryAsylum %in% c("Germany")) %>% group_by(Orig) %>% summarise(sum(Rejected))
ref_num_cho
ref_num_cho <- ref_num %>% filter(CtryAsylum %in% c("Germany", "Sweden", "Finalnd"))
ref_num_cho
ref_num_cho <- ref_num %>% filter(CtryAsylum %in% c("Germany", "Sweden", "Finland"))
ref_num_cho
ref_num_cho %>% group_by(CtryAsylum) %>% summarise(sum(Orig))
ref_num_cho <- ref_num %>% filter(CtryAsylum %in% c("Germany", "Sweden", "Finland"))
ref_num_cho %>% group_by(CtryAsylum) %>% summarise(sum(Orig))
ref_num_cho %>% group_by(CtryAsylum) %>% summarise(sum(Rejected))
ref_num <- filter(ref_num, CtryAsylum %in% c("Germany") & Orig %in% c("Afganistan"))
ref_num <- group_by(ref_num, CtryAsylum) %>% summarise(sum(Rejected))
ref_num
GER <- filter(ref_num, CtryAsylum =="Germany" & Orig &in% c("Afganistan")) %>% group_by(Orig) %>% summarise(sum(Rejected))
GER <- filter(ref_num, CtryAsylum =="Germany" & Orig %in% c("Afganistan")) %>% group_by(Orig) %>% summarise(sum(Rejected))
ref_num <- read_csv("unhcr_asylum_seekers.csv",skip=2, col_names=TRUE)
names(ref_num)
dim(ref_num)
str(ref_num)
glimpse(ref_num)
names(ref_num)= c("Year", "CtryAsylum", "Orig", "RSD","TotalStY","AppDY","DecRec", "DecOth", "Rejected", "OthClos", "TotDec", "TotEndY" )
ref_num$Rejected = as.numeric(ref_num$Rejected)
glimpse(ref_num)
#data.frame(ref_num[-1], comp = complete.cases(ref_num))
#ref_num <- filter(ref_num, complete.cases(ref_num) != FALSE)
GER <- filter(ref_num, CtryAsylum =="Germany" & Orig %in% c("Afganistan")) %>% group_by(Orig) %>% summarise(sum(Rejected))
GER
GER <- filter(ref_num, CtryAsylum =="Germany" & Orig =="Afganistan") %>% group_by(Orig) %>% summarise(sum(Rejected))
GER
GER <- filter(ref_num, CtryAsylum =="Germany", Orig =="Afganistan") %>% group_by(Orig) %>% summarise(sum(Rejected))
GER
GER <- filter(ref_num, CtryAsylum =="Germany") %>% group_by(Orig) %>% summarise(sum(Rejected))
GER
GER <- filter(ref_num, CtryAsylum =="Germany") %>% group_by(Orig) %>% filter(Orig %in% c("Afganistan")) summarise(sum(Rejected))
GER <- filter(ref_num, CtryAsylum =="Germany") %>% group_by(Orig) %>% filter(Orig =="Afganistan") summarise(sum(Rejected))
GER <- filter(ref_num, CtryAsylum =="Germany") %>% group_by(Orig) %>% filter(Orig =="Afganistan") %>%summarise(sum(Rejected))
GER
#ref_num <- read_csv("unhcr_asylum_seekers.csv",skip=2, col_names=TRUE, col_types = "cccciiiiiiii")
ref_num <- read_csv("unhcr_asylum_seekers.csv",skip=2, col_names=TRUE)
names(ref_num)
dim(ref_num)
str(ref_num)
glimpse(ref_num)
names(ref_num)= c("Year", "CtryAsylum", "Orig", "RSD","TotalStY","AppDY","DecRec", "DecOth", "Rejected", "OthClos", "TotDec", "TotEndY" )
ref_num$Rejected = as.numeric(ref_num$Rejected)
glimpse(ref_num)
names(ref_num)
ref_num_sel1 <- select(ref_num, one_of("CtryAsylum", "Orig", "TotalSty", "DecRec", "DecOth", "Rejected", "TotalDec"))
ref_num_sel1 <- select(ref_num, one_of("CtryAsylum", "Orig", "TotalStY", "DecRec", "DecOth", "Rejected", "TotDec"))
glimpse(ref_num_sel_1)
glimpse(ref_num_sel1)
ref_num <- select(ref_num, one_of("CtryAsylum", "Orig", "TotalStY", "DecRec", "DecOth", "Rejected", "TotDec"))
glimpse(ref_num)
ref_num$Rejected = as.numeric(ref_num$Rejected)
ref_num$TotalStY = as.numeric(ref_num$TotalSty)
glimpse(ref_num)
ref_num$Rejected = as.numeric(ref_num$Rejected)
ref_num$TotalStY = as.numeric(ref_num$TotalSty)
glimpse(ref_num)
ref_num$Rejected = as.numeric(ref_num$Rejected)
ref_num$TotalStY = as.numeric(ref_num$TotalStY)
glimpse(ref_num)
ref_orig <- read_excel("ref_origl.xls", sheet=1, col_names=TRUE)
ref_orig <- read_excel("ref_orig.xls", sheet=1, col_names=TRUE)
ref_orig <- read_excel("ref_orig.xlsx", sheet=1, col_names=TRUE)
ref_asylum<- read_excel("ref_orig.xlsx", sheet=1, col_names=TRUE)
ref_orig <- read_excel("ref_orig.xlsx", sheet=2, col_names=TRUE)
dim(ref_asylum)
dim(ref_orig)
glimpse(ref_asylum)
ref_asylum <- select(ref_asylum, 1:2)
dim(ref_asylum)
names(ref_asylum)
select(ref_asylum, contains("Country"), starts_with("refugees"))
names(ref_num)
names(ref_asylum)
ref_asylum<- read_excel("ref_orig.xlsx", sheet=1, col_names=TRUE)
ref_orig <- read_excel("ref_orig.xlsx", sheet=2, col_names=TRUE)
dim(ref_asylum)
dim(ref_orig)
names(ref_asylum)
dim(ref_asylum)
dim(ref_orig)
names(ref_asylum)
select(ref_asylum, 1,2,3)
names(ref_asylum)
ref_asylum <- select(ref_asylum, 1,2,3)
names(ref_asylum)
ref_asylum<- read_excel("ref_orig.xlsx", sheet=1, col_names= c("Country", "refugees per 1000", "Refugees N"))
ref_orig <- read_excel("ref_orig.xlsx", sheet=2, col_names=TRUE)
names(ref_asylum)
ref_num <- read_csv("ref_orig.csv", col_names=TRUE)
ref_num <- read_csv("ref_orig.csv")
ref_num <- read_csv("ref_orig.csv", delim=";")
ref_num <- read_csv("ref_orig.csv", sep=";")
ref_num <- read.csv("ref_orig.csv", sep=";")
ref_num <- read.csv("ref_orig.csv", sep=";", headers=TRUE)
ref_num <- read.csv("ref_orig.csv", sep=";", header=TRUE)
glimpse(ref_num)
ref_num <- read.csv("ref_orig.csv", sep=";", header=TRUE)
glimpse(ref_num)
ref_p1000 <- read.csv("ref_orig.csv", sep=";", header=TRUE)
glimpse(ref_p1000)
select(ref_p1000)
ref_p1000 <- read.csv("ref_orig.csv", sep=";", header=TRUE)
ref_p1000 <- read.csv("ref_orig.csv", sep=";", header=TRUE)
glimpse(ref_p1000)
select(ref_p1000)
ref_p1000 <- read.csv("ref_orig.csv", sep=";", header=TRUE)
glimpse(ref_p1000)
ref_orig <- read.csv("ref_orig2.csv", sep=";", header=TRUE)
names(ref_orig)
select(ref_orig, -4:11)
select(ref_orig, 1:3)
ref_asylum <- read.csv("ref_asylum.csv", sep=";", header=TRUE)
names(ref_asylum)
ref_orig <- read.csv("ref_orig2.csv", sep=";", header=TRUE)
names(ref_orig)
ref_orig <- select(ref_orig, 1:3)
ref_asylum <- read.csv("ref_asylum.csv", sep=";", header=TRUE)
names(ref_asylum)
ref_asylum <- select(ref_orig, 1:3)
ref_orig
ref_asylum
names(ref_orig) = c("Country", "PerPop", "refugees")
names(ref_orig)
names(ref_orig) = c("Country", "PerPop", "Refugees")
names(ref_orig)
names(ref_orig) = c("Country", "PerOfPop", "RefOrig")
names(ref_orig)
names(ref_asylum) = c("Country", "Per1000", "RefAsyl")
names(ref_asylum)
ref_orig
ref_orig <- arrange(ref_orig, PerOfPop)
ref_orig
ref_orig$RefOrig<- str_replace(ref_orig$Ref_orig, pattern=",", replace ="") %>% as.numeric()
library(stringr)
ref_orig$RefOrig<- str_replace(ref_orig$Ref_orig, pattern=",", replace ="") %>% as.numeric()
ref_orig$RefOrig<- str_replace(ref_orig$RefOrig, pattern=",", replace ="") %>% as.numeric()
ref_orig
ref_orig <- read.csv("ref_orig2.csv", sep=";", header=TRUE)
names(ref_orig)
ref_orig <- select(ref_orig, 1:3)
ref_asylum <- read.csv("ref_asylum.csv", sep=";", header=TRUE)
names(ref_asylum)
ref_asylum <- select(ref_orig, 1:3)
ref_orig
ref_asylum
names(ref_orig) = c("Country", "PerOfPop", "RefOrig")
names(ref_orig)
names(ref_asylum) = c("Country", "Per1000", "RefAsyl")
names(ref_asylum)
ref_orig <- arrange(ref_orig, PerOfPop)
ref_orig
ref_orig$RefOrig<- str_replace(ref_orig$RefOrig, pattern=",", replace ="")
#%>% as.numeric()
ref_orig
ref_orig$RefOrig<- str_replace(ref_orig$RefOrig, pattern=",", replace ="")
ref_orig
ref_orig <- arrange(ref_orig, PerOfPop)
ref_orig
ref_orig <- read.csv("ref_orig2.csv", sep=";", header=TRUE)
names(ref_orig)
ref_orig <- select(ref_orig, 1:3)
ref_asylum <- read.csv("ref_asylum.csv", sep=";", header=TRUE)
names(ref_asylum)
ref_asylum <- select(ref_orig, 1:3)
ref_orig
ref_asylum
names(ref_orig) = c("Country", "PerOfPop", "RefOrig")
names(ref_orig)
names(ref_asylum) = c("Country", "Per1000", "RefAsyl")
names(ref_asylum)
ref_orig <- arrange(ref_orig, PerOfPop)
ref_orig
ref_orig$RefOrig<- str_replace(ref_orig$RefOrig, pattern=",", replace ="")
#%>% as.numeric()
ref_orig$RefOrig<- str_replace(ref_orig$RefOrig, pattern=",", replace ="")
ref_orig
ref_orig <- arrange(ref_orig, PerOfPop)
ref_orig <- read.csv("ref_orig2.csv", sep=";", header=TRUE)
names(ref_orig)
ref_orig <- select(ref_orig, 1:3)
ref_asylum <- read.csv("ref_asylum.csv", sep=";", header=TRUE)
names(ref_asylum)
ref_asylum <- select(ref_orig, 1:3)
ref_orig
ref_asylum
names(ref_orig) = c("Country", "PerOfPop", "RefOrig")
names(ref_orig)
names(ref_asylum) = c("Country", "Per1000", "RefAsyl")
names(ref_asylum)
ref_orig <- arrange(ref_orig, PerOfPop)
ref_orig
ref_orig$RefOrig<- str_replace(ref_orig$RefOrig, pattern=",", replace ="")
#%>% as.numeric()
ref_orig$RefOrig<- str_replace(ref_orig$RefOrig, pattern=",", replace ="")
ref_orig
ref_orig <- arrange(ref_orig, PerOfPop)
ref_orig$RefOrig<- str_replace(ref_orig$RefOrig, pattern=",", replace ="")
ref_orig <- as.numeric(ref_orig$RefOrig)
ref_orig <- arrange(ref_orig, PerOfPop
ref_orig
ref_orig <- read.csv("ref_orig2.csv", sep=";", header=TRUE)
names(ref_orig)
ref_orig <- select(ref_orig, 1:3)
ref_asylum <- read.csv("ref_asylum.csv", sep=";", header=TRUE)
names(ref_asylum)
ref_asylum <- select(ref_orig, 1:3)
ref_orig
ref_asylum
names(ref_orig) = c("Country", "PerOfPop", "RefOrig")
names(ref_orig)
names(ref_asylum) = c("Country", "Per1000", "RefAsyl")
names(ref_asylum)
ref_orig <- arrange(ref_orig, PerOfPop)
ref_orig
ref_orig$RefOrig<- str_replace(ref_orig$RefOrig, pattern=",", replace ="")
ref_orig$RefOrig<- str_replace(ref_orig$RefOrig, pattern=",", replace ="")
#ref_orig <- as.numeric(ref_orig$RefOrig)
ref_orig <- arrange(ref_orig, PerOfPop)
ref_orig
ref_orig <- read_csv("ref_orig2.csv", delim=";", header=TRUE)
names(ref_orig)
ref_orig <- select(ref_orig, 1:3)
ref_asylum <- read.csv("ref_asylum.csv", sep=";", header=TRUE)
names(ref_asylum)
ref_asylum <- select(ref_orig, 1:3)
ref_orig
ref_asylum
names(ref_orig) = c("Country", "PerOfPop", "RefOrig")
names(ref_orig)
names(ref_asylum) = c("Country", "Per1000", "RefAsyl")
names(ref_asylum)
ref_orig <- arrange(ref_orig, PerOfPop)
ref_orig
ref_orig$RefOrig<- str_replace(ref_orig$RefOrig, pattern=",", replace ="")
ref_orig$RefOrig<- str_replace(ref_orig$RefOrig, pattern=",", replace ="")
#ref_orig <- read.csv("ref_orig2.csv", sep=";", header=TRUE)
ref_orig <- read_csv("ref_orig2.csv", delim=";", header=TRUE, skip=2)
names(ref_orig)
ref_orig <- select(ref_orig, 1:3)
ref_asylum <- read.csv("ref_asylum.csv", sep=";", header=TRUE)
names(ref_asylum)
ref_asylum <- select(ref_orig, 1:3)
ref_orig
ref_asylum
names(ref_orig) = c("Country", "PerOfPop", "RefOrig")
names(ref_orig)
names(ref_asylum) = c("Country", "Per1000", "RefAsyl")
names(ref_asylum)
ref_orig <- arrange(ref_orig, PerOfPop)
ref_orig
ref_orig <- read_csv("ref_orig2.csv", delim=";", header=TRUE, col_types= cols( Country= col_character(), PerOfPop = col_double(), RefOrig = col_integer())
names(ref_orig)
ref_orig <- select(ref_orig, 1:3)
ref_orig <- read_csv("ref_orig2.csv", delim=";", header=TRUE)
names(ref_orig)
ref_orig <- select(ref_orig, 1:3)
ref_asylum <- read.csv("ref_asylum.csv", sep=";", header=TRUE)
names(ref_asylum)
ref_asylum <- select(ref_orig, 1:3)
ref_orig
ref_asylum
names(ref_orig) = c("Country", "PerOfPop", "RefOrig")
names(ref_orig)
names(ref_asylum) = c("Country", "Per1000", "RefAsyl")
names(ref_asylum)
ref_orig <- arrange(ref_orig, PerOfPop)
ref_orig
ref_orig$RefOrig<- str_replace(ref_orig$RefOrig, pattern=",", replace ="")
ref_orig$RefOrig<- str_replace(ref_orig$RefOrig, pattern=",", replace ="")
#ref_orig <- as.numeric(ref_orig$RefOrig)
ref_orig <- arrange(ref_orig, PerOfPop)
ref_orig
summarise(ref_orig, sum(PerOfPop))
ref_orig$RefOrig<- str_replace(ref_orig$RefOrig, pattern=",", replace ="")
ref_orig$RefOrig <- as.numeric(ref_orig$RefOrig)
ref_orig <- arrange(ref_orig, PerOfPop)
ref_orig
ref_orig$PerOfPop <- as.numeric(ref_orig$PerOfPop)
ref_orig <- arrange(ref_orig, PerOfPop)
ref_orig
ref_orig$RefOrig<- str_replace(ref_orig$RefOrig, pattern=",", replace ="")
ref_orig$PerOfPop <- as.double(ref_orig$PerOfPop)
ref_orig <- arrange(ref_orig, PerOfPop)
ref_orig
summarise(ref_orig, sum(PerOfPop))
ref_asylum <- read.csv("ref_asylum.csv", sep=";", header=TRUE)
names(ref_asylum)
ref_asylum <- select(ref_orig, 1:3)
ref_orig
ref_asylum
names(ref_orig) = c("Country", "PerOfPop", "RefOrig")
names(ref_orig)
names(ref_asylum) = c("Country", "Per1000", "RefAsyl")
names(ref_asylum)
ref_orig <- arrange(ref_orig, PerOfPop)
ref_orig
ref_orig$RefOrig<- str_replace(ref_orig$RefOrig, pattern=",", replace ="")
ref_orig$RefOrig<- str_replace(ref_orig$RefOrig, pattern=",", replace ="")
ref_orig$PerOfPop <- as.double(ref_orig$PerOfPop)
ref_orig <- arrange(ref_orig, PerOfPop)
ref_orig
summarise(ref_orig, sum(PerOfPop))
ref_orig$RefOrig<- str_replace(ref_orig$RefOrig, pattern=",", replace ="")
ref_orig$RefOrig<- str_replace(ref_orig$RefOrig, pattern=",", replace ="")
#ref_orig$PerOfPop <- as.double(ref_orig$PerOfPop)
ref_orig <- arrange(ref_orig, PerOfPop)
ref_orig
summarise(ref_orig, sum(PerOfPop))
#2
ref_asylum <- read.csv("ref_asylum.csv", sep=";", header=TRUE)
names(ref_asylum)
ref_asylum <- select(ref_orig, 1:3)
ref_orig
ref_asylum
names(ref_orig) = c("Country", "PerOfPop", "RefOrig")
names(ref_orig)
names(ref_asylum) = c("Country", "Per1000", "RefAsyl")
names(ref_asylum)
#ref_orig <- arrange(ref_orig, PerOfPop)
ref_orig
ref_orig$RefOrig<- str_replace(ref_orig$RefOrig, pattern=",", replace ="")
ref_orig$RefOrig<- str_replace(ref_orig$RefOrig, pattern=",", replace ="")
#ref_orig$PerOfPop <- as.double(ref_orig$PerOfPop)
ref_orig <- arrange(ref_orig, PerOfPop)
ref_orig
summarise(ref_orig, sum(PerOfPop))
names(ref_orig) = c("Country", "PerOfPop", "RefOrig")
names(ref_orig)
names(ref_asylum) = c("Country", "Per1000", "RefAsyl")
names(ref_asylum)
#ref_orig <- arrange(ref_orig, PerOfPop)
ref_orig
ref_orig$RefOrig<- str_replace(ref_orig$RefOrig, pattern=",", replace ="")
ref_orig$RefOrig<- str_replace(ref_orig$RefOrig, pattern=",", replace ="")
#ref_orig$PerOfPop <- as.double(ref_orig$PerOfPop)
ref_orig <- arrange(ref_orig, PerOfPop)
ref_orig
summarise(ref_orig, sum(PerOfPop))
ref_orig$PerOfPop <- as.double(ref_orig$PerOfPop)
ref_orig$RefOrig<- str_replace(ref_orig$RefOrig, pattern=",", replace ="")
ref_orig$PerOfPop <- as.double(ref_orig$PerOfPop)
ref_orig <- arrange(ref_orig, PerOfPop)
ref_orig
summarise(ref_orig, sum(PerOfPop))
